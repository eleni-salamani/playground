name: On merge of release branches - trigger deployment

on:
  pull_request:
    branches:
      - master
    types: [closed]

jobs:
  trigger_deployment:
    name: pr_merged
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
      ENVIRONMENT: staging

    if: github.event.pull_request.merged == true

    steps:
      - name: Test env name has been set
        run: echo "${{ env.ENVIRONMENT }}"
      
      - name: Create GitHub deployment
        id: deployment
        run: |
          curl -X POST https://api.github.com/repos/eleni-salamani/playground/deployments \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          -u eleni-salamani:${{ secrets.ELENA_TOKEN }} \
          --data '{"environment": "${{ env.ENVIRONMENT }}", "ref": "${{ github.sha }}"}' -o /tmp/curl_output.txt
          cat /tmp/curl_output.txt
          deployment_id=$(cat /tmp/curl_output.txt | jq '.id')
          echo $deployment_id
          echo ::set-output name=deployment_id::$(echo $deployment_id)
       

#       - uses: chrnorm/deployment-action@releases/v1
#         name: Create GitHub deployment
#         id: deployment
#         with:
#           token: "${{ env.GITHUB_TOKEN }}"
#           environment: ${{ env.ENVIRONMENT }}
#           ref: ${{ github.sha }}
          
      - name: check deployment id
        if: always()
        run: echo "${{ steps.deployment.outputs.deployment_id }}"
