name: ls-files

on:
  pull_request:
#    branches:
#      - master
#    types: [closed]

jobs:
  ls-files:
    name: ls-files
    runs-on: ubuntu-latest

#    if: github.event.pull_request.merged == true

    steps:
      - name: pull code
        uses: actions/checkout@v1

      - name:  Get list/paths of changed files
        uses: lots0logs/gh-action-get-changed-files@2.1.4
        id: files
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

#      - name: Get list/paths of changed files
#        id: files
#        uses: jitterbit/get-changed-files@v1
#        with:
#          format: 'json'
#
      - name: Parse changed files
        id: changeset
        run: |
          readarray -t changed_files <<<"$(jq -r '.[]' <<<'${{ steps.files.outputs.all }}')"
          length=${#changed_files[@]}
          echo "length is $length"
          echo "BEFORE"
          echo $changed_files
          count=0
          while [ $count -lt $length ]
          do
              echo "$count"
              echo "${changed_files[$count]}"
              changed_files[$count]=$(echo "$changed_files[$count]" | xargs -n1 dirname)
              count=$(( $count + 1 ))
          done

          echo "AFTER"
          echo $changed_files
          echo "${#changed_files[@]}"

#          array=()
#          while IFS='' read -r $c; do
#              array+=( "$c" )
#          done < <(echo $changed_files)
#          echo ${#array[@]}

#          for i in "${!changed_files[@]}"; do
#            printf "%s\t%s\n" "$i" "${changed_files[$i]}"
#            changed_files[$i]=$(echo "${changed_files[$i]}" | xargs -n1 dirname)
#          done
#          echo "AFTER"
#          echo $changed_files

#
#
#          array=()
#          readarray -t changed_files <<<"$(jq -r '.[]' <<<'${{ steps.files.outputs.all }}')"
#              for changed_file in ${changed_files[@]}; do
#                echo "Do something with this ${changed_file}."
#                path=$(echo "$changed_file" | xargs -n1 dirname)
#                echo "path IS $path"
#                array+=($path)
#              done
#          echo "checking array"
#          echo $array
#          cat dependencies.txt
#          echo "$(jq -r '.[]' <<<'${{ steps.files.outputs.all }}')"
#          echo ${{ steps.files.outputs.all }}
#          changes="'"${{ steps.files.outputs.all }}"'"
#          echo "$changes"
#          echo "'""${{ steps.files.outputs.all }}""'"
#          echo "$changes" | jq -c '.[]'
#          for CHANGE in $(echo "$changes" | jq -c '.[]')
#          do
#          (
#            echo "CHANGE IS $CHANGE"
#            PATH=$(echo "$CHANGE" | xargs -n1 dirname)
#            echo "PATH IS $PATH"
#          )
#          done
#          CHANGED_FILE=$(echo ${{ steps.files.outputs.all }})
#          UNIQUE=($(printf "%s\n" "${owner[@]}" | sort -u | tr '\n' ' '))
#                root_path=$(echo "$path" | xargs -n1 dirname)
#                echo "root_path IS $root_path"
#               array=$(jq -r '.[]' <<<'${{ steps.files.outputs.all }}')
#               files="$(jq -r '.[]' <<<'${{ steps.files.outputs.all }}')"
#               echo "BEFORE"
#               echo $changed_files
#               echo $array
#               array[$count]=$(echo "${changed_files[$count]}" | xargs -n1 dirname)

